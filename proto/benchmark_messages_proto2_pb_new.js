/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('../google-protobuf-new');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.benchmarks.proto2.GoogleMessage1', null, global);
goog.exportSymbol('proto.benchmarks.proto2.GoogleMessage1SubMessage', null, global);
goog.exportSymbol('proto.benchmarks.proto2.GoogleMessage2', null, global);
goog.exportSymbol('proto.benchmarks.proto2.GoogleMessage2.Group1', null, global);
goog.exportSymbol('proto.benchmarks.proto2.GoogleMessage2GroupedMessage', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.benchmarks.proto2.GoogleMessage1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.benchmarks.proto2.GoogleMessage1.repeatedFields_, null);
};
goog.inherits(proto.benchmarks.proto2.GoogleMessage1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.benchmarks.proto2.GoogleMessage1.displayName = 'proto.benchmarks.proto2.GoogleMessage1';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.benchmarks.proto2.GoogleMessage1.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.toObject = function(opt_includeInstance) {
  return proto.benchmarks.proto2.GoogleMessage1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.benchmarks.proto2.GoogleMessage1} msg The msg instance to transform.
 * @return {!Object}
 */
proto.benchmarks.proto2.GoogleMessage1.toObject = function(includeInstance, msg) {
  var f, obj = {
    field1: jspb.Message.getField(msg, 1),
    field9: jspb.Message.getField(msg, 9),
    field18: jspb.Message.getField(msg, 18),
    field80: jspb.Message.getFieldWithDefault(msg, 80, false),
    field81: jspb.Message.getFieldWithDefault(msg, 81, true),
    field2: jspb.Message.getField(msg, 2),
    field3: jspb.Message.getField(msg, 3),
    field280: jspb.Message.getField(msg, 280),
    field6: jspb.Message.getFieldWithDefault(msg, 6, 0),
    field22: jspb.Message.getField(msg, 22),
    field4: jspb.Message.getField(msg, 4),
    field5List: jspb.Message.getField(msg, 5),
    field59: jspb.Message.getFieldWithDefault(msg, 59, false),
    field7: jspb.Message.getField(msg, 7),
    field16: jspb.Message.getField(msg, 16),
    field130: jspb.Message.getFieldWithDefault(msg, 130, 0),
    field12: jspb.Message.getFieldWithDefault(msg, 12, true),
    field17: jspb.Message.getFieldWithDefault(msg, 17, true),
    field13: jspb.Message.getFieldWithDefault(msg, 13, true),
    field14: jspb.Message.getFieldWithDefault(msg, 14, true),
    field104: jspb.Message.getFieldWithDefault(msg, 104, 0),
    field100: jspb.Message.getFieldWithDefault(msg, 100, 0),
    field101: jspb.Message.getFieldWithDefault(msg, 101, 0),
    field102: jspb.Message.getField(msg, 102),
    field103: jspb.Message.getField(msg, 103),
    field29: jspb.Message.getFieldWithDefault(msg, 29, 0),
    field30: jspb.Message.getFieldWithDefault(msg, 30, false),
    field60: jspb.Message.getFieldWithDefault(msg, 60, -1),
    field271: jspb.Message.getFieldWithDefault(msg, 271, -1),
    field272: jspb.Message.getFieldWithDefault(msg, 272, -1),
    field150: jspb.Message.getField(msg, 150),
    field23: jspb.Message.getFieldWithDefault(msg, 23, 0),
    field24: jspb.Message.getFieldWithDefault(msg, 24, false),
    field25: jspb.Message.getFieldWithDefault(msg, 25, 0),
    field15: (f = msg.getField15()) && proto.benchmarks.proto2.GoogleMessage1SubMessage.toObject(includeInstance, f),
    field78: jspb.Message.getField(msg, 78),
    field67: jspb.Message.getFieldWithDefault(msg, 67, 0),
    field68: jspb.Message.getField(msg, 68),
    field128: jspb.Message.getFieldWithDefault(msg, 128, 0),
    field129: jspb.Message.getFieldWithDefault(msg, 129, "xxxxxxxxxxxxxxxxxxxxx"),
    field131: jspb.Message.getFieldWithDefault(msg, 131, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.benchmarks.proto2.GoogleMessage1}
 */
proto.benchmarks.proto2.GoogleMessage1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.benchmarks.proto2.GoogleMessage1;
  return proto.benchmarks.proto2.GoogleMessage1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.benchmarks.proto2.GoogleMessage1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.benchmarks.proto2.GoogleMessage1}
 */
proto.benchmarks.proto2.GoogleMessage1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField1(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setField9(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setField18(value);
      break;
    case 80:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField80(value);
      break;
    case 81:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField81(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField2(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField3(value);
      break;
    case 280:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField280(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField6(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setField22(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setField4(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.addField5(value);
      break;
    case 59:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField59(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setField7(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField16(value);
      break;
    case 130:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField130(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField12(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField17(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField13(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField14(value);
      break;
    case 104:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField104(value);
      break;
    case 100:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField100(value);
      break;
    case 101:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField101(value);
      break;
    case 102:
      var value = /** @type {string} */ (reader.readString());
      msg.setField102(value);
      break;
    case 103:
      var value = /** @type {string} */ (reader.readString());
      msg.setField103(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField29(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField30(value);
      break;
    case 60:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField60(value);
      break;
    case 271:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField271(value);
      break;
    case 272:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField272(value);
      break;
    case 150:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField150(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField23(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField24(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField25(value);
      break;
    case 15:
      var value = new proto.benchmarks.proto2.GoogleMessage1SubMessage;
      reader.readMessage(value,proto.benchmarks.proto2.GoogleMessage1SubMessage.deserializeBinaryFromReader);
      msg.setField15(value);
      break;
    case 78:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField78(value);
      break;
    case 67:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField67(value);
      break;
    case 68:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField68(value);
      break;
    case 128:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField128(value);
      break;
    case 129:
      var value = /** @type {string} */ (reader.readString());
      msg.setField129(value);
      break;
    case 131:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField131(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.benchmarks.proto2.GoogleMessage1} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.benchmarks.proto2.GoogleMessage1.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 80));
  if (f != null) {
    writer.writeBool(
      80,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 81));
  if (f != null) {
    writer.writeBool(
      81,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 280));
  if (f != null) {
    writer.writeInt32(
      280,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 22));
  if (f != null) {
    writer.writeInt64(
      22,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getField5List();
  if (f.length > 0) {
    writer.writeRepeatedFixed64(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 59));
  if (f != null) {
    writer.writeBool(
      59,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 16));
  if (f != null) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 130));
  if (f != null) {
    writer.writeInt32(
      130,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 104));
  if (f != null) {
    writer.writeInt32(
      104,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 100));
  if (f != null) {
    writer.writeInt32(
      100,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 101));
  if (f != null) {
    writer.writeInt32(
      101,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 102));
  if (f != null) {
    writer.writeString(
      102,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 103));
  if (f != null) {
    writer.writeString(
      103,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 29));
  if (f != null) {
    writer.writeInt32(
      29,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 30));
  if (f != null) {
    writer.writeBool(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 60));
  if (f != null) {
    writer.writeInt32(
      60,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 271));
  if (f != null) {
    writer.writeInt32(
      271,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 272));
  if (f != null) {
    writer.writeInt32(
      272,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 150));
  if (f != null) {
    writer.writeInt32(
      150,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 23));
  if (f != null) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 24));
  if (f != null) {
    writer.writeBool(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 25));
  if (f != null) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = this.getField15();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.benchmarks.proto2.GoogleMessage1SubMessage.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 78));
  if (f != null) {
    writer.writeBool(
      78,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 67));
  if (f != null) {
    writer.writeInt32(
      67,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 68));
  if (f != null) {
    writer.writeInt32(
      68,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 128));
  if (f != null) {
    writer.writeInt32(
      128,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 129));
  if (f != null) {
    writer.writeString(
      129,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 131));
  if (f != null) {
    writer.writeInt32(
      131,
      f
    );
  }
};


/**
 * required string field1 = 1;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField1 = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField1 = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField1 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string field9 = 9;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField9 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField9 = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField9 = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField9 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string field18 = 18;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField18 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField18 = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField18 = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField18 = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool field80 = 80;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField80 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 80, false));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField80 = function(value) {
  jspb.Message.setField(this, 80, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField80 = function() {
  jspb.Message.setField(this, 80, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField80 = function() {
  return jspb.Message.getField(this, 80) != null;
};


/**
 * optional bool field81 = 81;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField81 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 81, true));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField81 = function(value) {
  jspb.Message.setField(this, 81, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField81 = function() {
  jspb.Message.setField(this, 81, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField81 = function() {
  return jspb.Message.getField(this, 81) != null;
};


/**
 * required int32 field2 = 2;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField2 = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField2 = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int32 field3 = 3;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField3 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField3 = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField3 = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField3 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 field280 = 280;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField280 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 280, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField280 = function(value) {
  jspb.Message.setField(this, 280, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField280 = function() {
  jspb.Message.setField(this, 280, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField280 = function() {
  return jspb.Message.getField(this, 280) != null;
};


/**
 * optional int32 field6 = 6;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField6 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField6 = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField6 = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField6 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int64 field22 = 22;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField22 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField22 = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField22 = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField22 = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string field4 = 4;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField4 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField4 = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField4 = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField4 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated fixed64 field5 = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField5List = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 5));
};


/** @param {!Array.<number>} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField5List = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.addField5 = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField5List = function() {
  this.setField5List([]);
};


/**
 * optional bool field59 = 59;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField59 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 59, false));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField59 = function(value) {
  jspb.Message.setField(this, 59, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField59 = function() {
  jspb.Message.setField(this, 59, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField59 = function() {
  return jspb.Message.getField(this, 59) != null;
};


/**
 * optional string field7 = 7;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField7 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField7 = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField7 = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField7 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 field16 = 16;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField16 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField16 = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField16 = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField16 = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int32 field130 = 130;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField130 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 130, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField130 = function(value) {
  jspb.Message.setField(this, 130, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField130 = function() {
  jspb.Message.setField(this, 130, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField130 = function() {
  return jspb.Message.getField(this, 130) != null;
};


/**
 * optional bool field12 = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField12 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, true));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField12 = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField12 = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField12 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool field17 = 17;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField17 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, true));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField17 = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField17 = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField17 = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool field13 = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField13 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, true));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField13 = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField13 = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField13 = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool field14 = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField14 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, true));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField14 = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField14 = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField14 = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional int32 field104 = 104;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField104 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 104, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField104 = function(value) {
  jspb.Message.setField(this, 104, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField104 = function() {
  jspb.Message.setField(this, 104, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField104 = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional int32 field100 = 100;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField100 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 100, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField100 = function(value) {
  jspb.Message.setField(this, 100, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField100 = function() {
  jspb.Message.setField(this, 100, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField100 = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional int32 field101 = 101;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField101 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 101, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField101 = function(value) {
  jspb.Message.setField(this, 101, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField101 = function() {
  jspb.Message.setField(this, 101, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField101 = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional string field102 = 102;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField102 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 102, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField102 = function(value) {
  jspb.Message.setField(this, 102, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField102 = function() {
  jspb.Message.setField(this, 102, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField102 = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional string field103 = 103;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField103 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 103, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField103 = function(value) {
  jspb.Message.setField(this, 103, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField103 = function() {
  jspb.Message.setField(this, 103, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField103 = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional int32 field29 = 29;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField29 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField29 = function(value) {
  jspb.Message.setField(this, 29, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField29 = function() {
  jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField29 = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional bool field30 = 30;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField30 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 30, false));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField30 = function(value) {
  jspb.Message.setField(this, 30, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField30 = function() {
  jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField30 = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional int32 field60 = 60;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField60 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 60, -1));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField60 = function(value) {
  jspb.Message.setField(this, 60, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField60 = function() {
  jspb.Message.setField(this, 60, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField60 = function() {
  return jspb.Message.getField(this, 60) != null;
};


/**
 * optional int32 field271 = 271;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField271 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 271, -1));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField271 = function(value) {
  jspb.Message.setField(this, 271, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField271 = function() {
  jspb.Message.setField(this, 271, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField271 = function() {
  return jspb.Message.getField(this, 271) != null;
};


/**
 * optional int32 field272 = 272;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField272 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 272, -1));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField272 = function(value) {
  jspb.Message.setField(this, 272, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField272 = function() {
  jspb.Message.setField(this, 272, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField272 = function() {
  return jspb.Message.getField(this, 272) != null;
};


/**
 * optional int32 field150 = 150;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField150 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 150, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField150 = function(value) {
  jspb.Message.setField(this, 150, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField150 = function() {
  jspb.Message.setField(this, 150, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField150 = function() {
  return jspb.Message.getField(this, 150) != null;
};


/**
 * optional int32 field23 = 23;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField23 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField23 = function(value) {
  jspb.Message.setField(this, 23, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField23 = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField23 = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bool field24 = 24;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField24 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 24, false));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField24 = function(value) {
  jspb.Message.setField(this, 24, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField24 = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField24 = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional int32 field25 = 25;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField25 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField25 = function(value) {
  jspb.Message.setField(this, 25, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField25 = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField25 = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional GoogleMessage1SubMessage field15 = 15;
 * @return {?proto.benchmarks.proto2.GoogleMessage1SubMessage}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField15 = function() {
  return /** @type{?proto.benchmarks.proto2.GoogleMessage1SubMessage} */ (
    jspb.Message.getWrapperField(this, proto.benchmarks.proto2.GoogleMessage1SubMessage, 15));
};


/** @param {?proto.benchmarks.proto2.GoogleMessage1SubMessage|undefined} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField15 = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField15 = function() {
  this.setField15(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField15 = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool field78 = 78;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField78 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 78, false));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField78 = function(value) {
  jspb.Message.setField(this, 78, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField78 = function() {
  jspb.Message.setField(this, 78, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField78 = function() {
  return jspb.Message.getField(this, 78) != null;
};


/**
 * optional int32 field67 = 67;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField67 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 67, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField67 = function(value) {
  jspb.Message.setField(this, 67, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField67 = function() {
  jspb.Message.setField(this, 67, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField67 = function() {
  return jspb.Message.getField(this, 67) != null;
};


/**
 * optional int32 field68 = 68;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField68 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 68, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField68 = function(value) {
  jspb.Message.setField(this, 68, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField68 = function() {
  jspb.Message.setField(this, 68, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField68 = function() {
  return jspb.Message.getField(this, 68) != null;
};


/**
 * optional int32 field128 = 128;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField128 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 128, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField128 = function(value) {
  jspb.Message.setField(this, 128, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField128 = function() {
  jspb.Message.setField(this, 128, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField128 = function() {
  return jspb.Message.getField(this, 128) != null;
};


/**
 * optional string field129 = 129;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField129 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 129, "xxxxxxxxxxxxxxxxxxxxx"));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField129 = function(value) {
  jspb.Message.setField(this, 129, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField129 = function() {
  jspb.Message.setField(this, 129, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField129 = function() {
  return jspb.Message.getField(this, 129) != null;
};


/**
 * optional int32 field131 = 131;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.getField131 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 131, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1.prototype.setField131 = function(value) {
  jspb.Message.setField(this, 131, value);
};


proto.benchmarks.proto2.GoogleMessage1.prototype.clearField131 = function() {
  jspb.Message.setField(this, 131, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1.prototype.hasField131 = function() {
  return jspb.Message.getField(this, 131) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.benchmarks.proto2.GoogleMessage1SubMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.benchmarks.proto2.GoogleMessage1SubMessage.displayName = 'proto.benchmarks.proto2.GoogleMessage1SubMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.benchmarks.proto2.GoogleMessage1SubMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.benchmarks.proto2.GoogleMessage1SubMessage} msg The msg instance to transform.
 * @return {!Object}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    field1: jspb.Message.getFieldWithDefault(msg, 1, 0),
    field2: jspb.Message.getFieldWithDefault(msg, 2, 0),
    field3: jspb.Message.getFieldWithDefault(msg, 3, 0),
    field15: jspb.Message.getField(msg, 15),
    field12: jspb.Message.getFieldWithDefault(msg, 12, true),
    field13: jspb.Message.getField(msg, 13),
    field14: jspb.Message.getField(msg, 14),
    field16: jspb.Message.getField(msg, 16),
    field19: jspb.Message.getFieldWithDefault(msg, 19, 2),
    field20: jspb.Message.getFieldWithDefault(msg, 20, true),
    field28: jspb.Message.getFieldWithDefault(msg, 28, true),
    field21: jspb.Message.getField(msg, 21),
    field22: jspb.Message.getField(msg, 22),
    field23: jspb.Message.getFieldWithDefault(msg, 23, false),
    field206: jspb.Message.getFieldWithDefault(msg, 206, false),
    field203: jspb.Message.getField(msg, 203),
    field204: jspb.Message.getField(msg, 204),
    field205: jspb.Message.getField(msg, 205),
    field207: jspb.Message.getField(msg, 207),
    field300: jspb.Message.getField(msg, 300)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.benchmarks.proto2.GoogleMessage1SubMessage}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.benchmarks.proto2.GoogleMessage1SubMessage;
  return proto.benchmarks.proto2.GoogleMessage1SubMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.benchmarks.proto2.GoogleMessage1SubMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.benchmarks.proto2.GoogleMessage1SubMessage}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField1(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField2(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField3(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setField15(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField12(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setField13(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setField14(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField16(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField19(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField20(value);
      break;
    case 28:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField28(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setField21(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField22(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField23(value);
      break;
    case 206:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField206(value);
      break;
    case 203:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setField203(value);
      break;
    case 204:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField204(value);
      break;
    case 205:
      var value = /** @type {string} */ (reader.readString());
      msg.setField205(value);
      break;
    case 207:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setField207(value);
      break;
    case 300:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setField300(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.benchmarks.proto2.GoogleMessage1SubMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 13));
  if (f != null) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 14));
  if (f != null) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 16));
  if (f != null) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 19));
  if (f != null) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 28));
  if (f != null) {
    writer.writeBool(
      28,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 21));
  if (f != null) {
    writer.writeFixed64(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 22));
  if (f != null) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 206));
  if (f != null) {
    writer.writeBool(
      206,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 203));
  if (f != null) {
    writer.writeFixed32(
      203,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 204));
  if (f != null) {
    writer.writeInt32(
      204,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 205));
  if (f != null) {
    writer.writeString(
      205,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 207));
  if (f != null) {
    writer.writeUint64(
      207,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 300));
  if (f != null) {
    writer.writeUint64(
      300,
      f
    );
  }
};


/**
 * optional int32 field1 = 1;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField1 = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField1 = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField1 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 field2 = 2;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField2 = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField2 = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 field3 = 3;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField3 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField3 = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField3 = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField3 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string field15 = 15;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField15 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField15 = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField15 = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField15 = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool field12 = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField12 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, true));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField12 = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField12 = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField12 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int64 field13 = 13;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField13 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField13 = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField13 = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField13 = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional int64 field14 = 14;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField14 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField14 = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField14 = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField14 = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional int32 field16 = 16;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField16 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField16 = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField16 = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField16 = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int32 field19 = 19;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField19 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 2));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField19 = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField19 = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField19 = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool field20 = 20;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField20 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 20, true));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField20 = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField20 = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField20 = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool field28 = 28;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField28 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 28, true));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField28 = function(value) {
  jspb.Message.setField(this, 28, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField28 = function() {
  jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField28 = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional fixed64 field21 = 21;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField21 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField21 = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField21 = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField21 = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional int32 field22 = 22;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField22 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField22 = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField22 = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField22 = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bool field23 = 23;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField23 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 23, false));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField23 = function(value) {
  jspb.Message.setField(this, 23, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField23 = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField23 = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bool field206 = 206;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField206 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 206, false));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField206 = function(value) {
  jspb.Message.setField(this, 206, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField206 = function() {
  jspb.Message.setField(this, 206, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField206 = function() {
  return jspb.Message.getField(this, 206) != null;
};


/**
 * optional fixed32 field203 = 203;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField203 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 203, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField203 = function(value) {
  jspb.Message.setField(this, 203, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField203 = function() {
  jspb.Message.setField(this, 203, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField203 = function() {
  return jspb.Message.getField(this, 203) != null;
};


/**
 * optional int32 field204 = 204;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField204 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 204, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField204 = function(value) {
  jspb.Message.setField(this, 204, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField204 = function() {
  jspb.Message.setField(this, 204, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField204 = function() {
  return jspb.Message.getField(this, 204) != null;
};


/**
 * optional string field205 = 205;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField205 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 205, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField205 = function(value) {
  jspb.Message.setField(this, 205, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField205 = function() {
  jspb.Message.setField(this, 205, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField205 = function() {
  return jspb.Message.getField(this, 205) != null;
};


/**
 * optional uint64 field207 = 207;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField207 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 207, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField207 = function(value) {
  jspb.Message.setField(this, 207, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField207 = function() {
  jspb.Message.setField(this, 207, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField207 = function() {
  return jspb.Message.getField(this, 207) != null;
};


/**
 * optional uint64 field300 = 300;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.getField300 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 300, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.setField300 = function(value) {
  jspb.Message.setField(this, 300, value);
};


proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.clearField300 = function() {
  jspb.Message.setField(this, 300, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage1SubMessage.prototype.hasField300 = function() {
  return jspb.Message.getField(this, 300) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.benchmarks.proto2.GoogleMessage2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.benchmarks.proto2.GoogleMessage2.repeatedFields_, null);
};
goog.inherits(proto.benchmarks.proto2.GoogleMessage2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.benchmarks.proto2.GoogleMessage2.displayName = 'proto.benchmarks.proto2.GoogleMessage2';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.benchmarks.proto2.GoogleMessage2.repeatedFields_ = [10,128,127,130];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.toObject = function(opt_includeInstance) {
  return proto.benchmarks.proto2.GoogleMessage2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.benchmarks.proto2.GoogleMessage2} msg The msg instance to transform.
 * @return {!Object}
 */
proto.benchmarks.proto2.GoogleMessage2.toObject = function(includeInstance, msg) {
  var f, obj = {
    field1: jspb.Message.getField(msg, 1),
    field3: jspb.Message.getField(msg, 3),
    field4: jspb.Message.getField(msg, 4),
    field30: jspb.Message.getField(msg, 30),
    field75: jspb.Message.getFieldWithDefault(msg, 75, false),
    field6: jspb.Message.getField(msg, 6),
    field2: msg.getField2_asB64(),
    field21: jspb.Message.getFieldWithDefault(msg, 21, 0),
    field71: jspb.Message.getField(msg, 71),
    field25: jspb.Message.getOptionalFloatingPointField(msg, 25),
    field109: jspb.Message.getFieldWithDefault(msg, 109, 0),
    field210: jspb.Message.getFieldWithDefault(msg, 210, 0),
    field211: jspb.Message.getFieldWithDefault(msg, 211, 0),
    field212: jspb.Message.getFieldWithDefault(msg, 212, 0),
    field213: jspb.Message.getFieldWithDefault(msg, 213, 0),
    field216: jspb.Message.getFieldWithDefault(msg, 216, 0),
    field217: jspb.Message.getFieldWithDefault(msg, 217, 0),
    field218: jspb.Message.getFieldWithDefault(msg, 218, 0),
    field220: jspb.Message.getFieldWithDefault(msg, 220, 0),
    field221: jspb.Message.getFieldWithDefault(msg, 221, 0),
    field222: +jspb.Message.getFieldWithDefault(msg, 222, 0.0),
    field63: jspb.Message.getField(msg, 63),
    group1List: jspb.Message.toObjectList(msg.getGroup1List(),
    proto.benchmarks.proto2.GoogleMessage2.Group1.toObject, includeInstance),
    field128List: jspb.Message.getField(msg, 128),
    field131: jspb.Message.getField(msg, 131),
    field127List: jspb.Message.getField(msg, 127),
    field129: jspb.Message.getField(msg, 129),
    field130List: jspb.Message.getField(msg, 130),
    field205: jspb.Message.getFieldWithDefault(msg, 205, false),
    field206: jspb.Message.getFieldWithDefault(msg, 206, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.benchmarks.proto2.GoogleMessage2}
 */
proto.benchmarks.proto2.GoogleMessage2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.benchmarks.proto2.GoogleMessage2;
  return proto.benchmarks.proto2.GoogleMessage2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.benchmarks.proto2.GoogleMessage2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.benchmarks.proto2.GoogleMessage2}
 */
proto.benchmarks.proto2.GoogleMessage2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField1(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setField3(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setField4(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setField30(value);
      break;
    case 75:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField75(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setField6(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setField2(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField21(value);
      break;
    case 71:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField71(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setField25(value);
      break;
    case 109:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField109(value);
      break;
    case 210:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField210(value);
      break;
    case 211:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField211(value);
      break;
    case 212:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField212(value);
      break;
    case 213:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField213(value);
      break;
    case 216:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField216(value);
      break;
    case 217:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField217(value);
      break;
    case 218:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField218(value);
      break;
    case 220:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField220(value);
      break;
    case 221:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField221(value);
      break;
    case 222:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setField222(value);
      break;
    case 63:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField63(value);
      break;
    case 10:
      var value = new proto.benchmarks.proto2.GoogleMessage2.Group1;
      reader.readGroup(10, value,proto.benchmarks.proto2.GoogleMessage2.Group1.deserializeBinaryFromReader);
      msg.addGroup1(value);
      break;
    case 128:
      var value = /** @type {string} */ (reader.readString());
      msg.addField128(value);
      break;
    case 131:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setField131(value);
      break;
    case 127:
      var value = /** @type {string} */ (reader.readString());
      msg.addField127(value);
      break;
    case 129:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField129(value);
      break;
    case 130:
      var value = /** @type {number} */ (reader.readInt64());
      msg.addField130(value);
      break;
    case 205:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField205(value);
      break;
    case 206:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField206(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.benchmarks.proto2.GoogleMessage2} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.benchmarks.proto2.GoogleMessage2.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 30));
  if (f != null) {
    writer.writeInt64(
      30,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 75));
  if (f != null) {
    writer.writeBool(
      75,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 21));
  if (f != null) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 71));
  if (f != null) {
    writer.writeInt32(
      71,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 25));
  if (f != null) {
    writer.writeFloat(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 109));
  if (f != null) {
    writer.writeInt32(
      109,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 210));
  if (f != null) {
    writer.writeInt32(
      210,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 211));
  if (f != null) {
    writer.writeInt32(
      211,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 212));
  if (f != null) {
    writer.writeInt32(
      212,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 213));
  if (f != null) {
    writer.writeInt32(
      213,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 216));
  if (f != null) {
    writer.writeInt32(
      216,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 217));
  if (f != null) {
    writer.writeInt32(
      217,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 218));
  if (f != null) {
    writer.writeInt32(
      218,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 220));
  if (f != null) {
    writer.writeInt32(
      220,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 221));
  if (f != null) {
    writer.writeInt32(
      221,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 222));
  if (f != null) {
    writer.writeFloat(
      222,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 63));
  if (f != null) {
    writer.writeInt32(
      63,
      f
    );
  }
  f = this.getGroup1List();
  if (f.length > 0) {
    writer.writeRepeatedGroup(
      10,
      f,
      proto.benchmarks.proto2.GoogleMessage2.Group1.serializeBinaryToWriter
    );
  }
  f = this.getField128List();
  if (f.length > 0) {
    writer.writeRepeatedString(
      128,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 131));
  if (f != null) {
    writer.writeInt64(
      131,
      f
    );
  }
  f = this.getField127List();
  if (f.length > 0) {
    writer.writeRepeatedString(
      127,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 129));
  if (f != null) {
    writer.writeInt32(
      129,
      f
    );
  }
  f = this.getField130List();
  if (f.length > 0) {
    writer.writeRepeatedInt64(
      130,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 205));
  if (f != null) {
    writer.writeBool(
      205,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 206));
  if (f != null) {
    writer.writeBool(
      206,
      f
    );
  }
};


/**
 * optional string field1 = 1;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField1 = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField1 = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField1 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 field3 = 3;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField3 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField3 = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField3 = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField3 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 field4 = 4;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField4 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField4 = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField4 = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField4 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 field30 = 30;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField30 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField30 = function(value) {
  jspb.Message.setField(this, 30, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField30 = function() {
  jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField30 = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional bool field75 = 75;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField75 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 75, false));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField75 = function(value) {
  jspb.Message.setField(this, 75, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField75 = function() {
  jspb.Message.setField(this, 75, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField75 = function() {
  return jspb.Message.getField(this, 75) != null;
};


/**
 * optional string field6 = 6;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField6 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField6 = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField6 = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField6 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes field2 = 2;
 * @return {!(string|Uint8Array)}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField2 = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes field2 = 2;
 * This is a type-conversion wrapper around `getField2()`
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField2_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getField2()));
};


/**
 * optional bytes field2 = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getField2()`
 * @return {!Uint8Array}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField2_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getField2()));
};


/** @param {!(string|Uint8Array)} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField2 = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField2 = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 field21 = 21;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField21 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField21 = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField21 = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField21 = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional int32 field71 = 71;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField71 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 71, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField71 = function(value) {
  jspb.Message.setField(this, 71, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField71 = function() {
  jspb.Message.setField(this, 71, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField71 = function() {
  return jspb.Message.getField(this, 71) != null;
};


/**
 * optional float field25 = 25;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField25 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 25, 0.0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField25 = function(value) {
  jspb.Message.setField(this, 25, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField25 = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField25 = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional int32 field109 = 109;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField109 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 109, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField109 = function(value) {
  jspb.Message.setField(this, 109, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField109 = function() {
  jspb.Message.setField(this, 109, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField109 = function() {
  return jspb.Message.getField(this, 109) != null;
};


/**
 * optional int32 field210 = 210;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField210 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 210, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField210 = function(value) {
  jspb.Message.setField(this, 210, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField210 = function() {
  jspb.Message.setField(this, 210, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField210 = function() {
  return jspb.Message.getField(this, 210) != null;
};


/**
 * optional int32 field211 = 211;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField211 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 211, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField211 = function(value) {
  jspb.Message.setField(this, 211, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField211 = function() {
  jspb.Message.setField(this, 211, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField211 = function() {
  return jspb.Message.getField(this, 211) != null;
};


/**
 * optional int32 field212 = 212;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField212 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 212, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField212 = function(value) {
  jspb.Message.setField(this, 212, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField212 = function() {
  jspb.Message.setField(this, 212, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField212 = function() {
  return jspb.Message.getField(this, 212) != null;
};


/**
 * optional int32 field213 = 213;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField213 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 213, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField213 = function(value) {
  jspb.Message.setField(this, 213, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField213 = function() {
  jspb.Message.setField(this, 213, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField213 = function() {
  return jspb.Message.getField(this, 213) != null;
};


/**
 * optional int32 field216 = 216;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField216 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 216, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField216 = function(value) {
  jspb.Message.setField(this, 216, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField216 = function() {
  jspb.Message.setField(this, 216, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField216 = function() {
  return jspb.Message.getField(this, 216) != null;
};


/**
 * optional int32 field217 = 217;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField217 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 217, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField217 = function(value) {
  jspb.Message.setField(this, 217, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField217 = function() {
  jspb.Message.setField(this, 217, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField217 = function() {
  return jspb.Message.getField(this, 217) != null;
};


/**
 * optional int32 field218 = 218;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField218 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 218, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField218 = function(value) {
  jspb.Message.setField(this, 218, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField218 = function() {
  jspb.Message.setField(this, 218, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField218 = function() {
  return jspb.Message.getField(this, 218) != null;
};


/**
 * optional int32 field220 = 220;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField220 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 220, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField220 = function(value) {
  jspb.Message.setField(this, 220, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField220 = function() {
  jspb.Message.setField(this, 220, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField220 = function() {
  return jspb.Message.getField(this, 220) != null;
};


/**
 * optional int32 field221 = 221;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField221 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 221, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField221 = function(value) {
  jspb.Message.setField(this, 221, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField221 = function() {
  jspb.Message.setField(this, 221, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField221 = function() {
  return jspb.Message.getField(this, 221) != null;
};


/**
 * optional float field222 = 222;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField222 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 222, 0.0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField222 = function(value) {
  jspb.Message.setField(this, 222, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField222 = function() {
  jspb.Message.setField(this, 222, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField222 = function() {
  return jspb.Message.getField(this, 222) != null;
};


/**
 * optional int32 field63 = 63;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField63 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 63, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField63 = function(value) {
  jspb.Message.setField(this, 63, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField63 = function() {
  jspb.Message.setField(this, 63, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField63 = function() {
  return jspb.Message.getField(this, 63) != null;
};


/**
 * repeated group Group1 = 10;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.benchmarks.proto2.GoogleMessage2.Group1>}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getGroup1List = function() {
  return /** @type{!Array.<!proto.benchmarks.proto2.GoogleMessage2.Group1>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.benchmarks.proto2.GoogleMessage2.Group1, 10));
};


/** @param {!Array.<!proto.benchmarks.proto2.GoogleMessage2.Group1>} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setGroup1List = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.benchmarks.proto2.GoogleMessage2.Group1=} opt_value
 * @param {number=} opt_index
 * @return {!proto.benchmarks.proto2.GoogleMessage2.Group1}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.addGroup1 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.benchmarks.proto2.GoogleMessage2.Group1, opt_index);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearGroup1List = function() {
  this.setGroup1List([]);
};


/**
 * repeated string field128 = 128;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField128List = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 128));
};


/** @param {!Array.<string>} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField128List = function(value) {
  jspb.Message.setField(this, 128, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.addField128 = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 128, value, opt_index);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField128List = function() {
  this.setField128List([]);
};


/**
 * optional int64 field131 = 131;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField131 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 131, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField131 = function(value) {
  jspb.Message.setField(this, 131, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField131 = function() {
  jspb.Message.setField(this, 131, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField131 = function() {
  return jspb.Message.getField(this, 131) != null;
};


/**
 * repeated string field127 = 127;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField127List = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 127));
};


/** @param {!Array.<string>} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField127List = function(value) {
  jspb.Message.setField(this, 127, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.addField127 = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 127, value, opt_index);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField127List = function() {
  this.setField127List([]);
};


/**
 * optional int32 field129 = 129;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField129 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 129, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField129 = function(value) {
  jspb.Message.setField(this, 129, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField129 = function() {
  jspb.Message.setField(this, 129, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField129 = function() {
  return jspb.Message.getField(this, 129) != null;
};


/**
 * repeated int64 field130 = 130;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField130List = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 130));
};


/** @param {!Array.<number>} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField130List = function(value) {
  jspb.Message.setField(this, 130, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.addField130 = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 130, value, opt_index);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField130List = function() {
  this.setField130List([]);
};


/**
 * optional bool field205 = 205;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField205 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 205, false));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField205 = function(value) {
  jspb.Message.setField(this, 205, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField205 = function() {
  jspb.Message.setField(this, 205, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField205 = function() {
  return jspb.Message.getField(this, 205) != null;
};


/**
 * optional bool field206 = 206;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.getField206 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 206, false));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage2.prototype.setField206 = function(value) {
  jspb.Message.setField(this, 206, value);
};


proto.benchmarks.proto2.GoogleMessage2.prototype.clearField206 = function() {
  jspb.Message.setField(this, 206, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.prototype.hasField206 = function() {
  return jspb.Message.getField(this, 206) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.benchmarks.proto2.GoogleMessage2.Group1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.benchmarks.proto2.GoogleMessage2.Group1.repeatedFields_, null);
};
goog.inherits(proto.benchmarks.proto2.GoogleMessage2.Group1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.benchmarks.proto2.GoogleMessage2.Group1.displayName = 'proto.benchmarks.proto2.GoogleMessage2.Group1';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.repeatedFields_ = [4,12,63];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.toObject = function(opt_includeInstance) {
  return proto.benchmarks.proto2.GoogleMessage2.Group1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.benchmarks.proto2.GoogleMessage2.Group1} msg The msg instance to transform.
 * @return {!Object}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.toObject = function(includeInstance, msg) {
  var f, obj = {
    field11: +jspb.Message.getField(msg, 1),
    field26: jspb.Message.getOptionalFloatingPointField(msg, 16),
    field12: jspb.Message.getField(msg, 2),
    field13: jspb.Message.getField(msg, 3),
    field14List: jspb.Message.getField(msg, 4),
    field15: jspb.Message.getField(msg, 5),
    field5: jspb.Message.getField(msg, -5),
    field27: jspb.Message.getField(msg, 17),
    field28: jspb.Message.getField(msg, 18),
    field29: jspb.Message.getField(msg, 19),
    field16: jspb.Message.getField(msg, 6),
    field22List: jspb.Message.getField(msg, 12),
    field73List: jspb.Message.getField(msg, 63),
    field20: jspb.Message.getFieldWithDefault(msg, 10, 0),
    field24: jspb.Message.getField(msg, 14),
    field31: (f = msg.getField31()) && proto.benchmarks.proto2.GoogleMessage2GroupedMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.benchmarks.proto2.GoogleMessage2.Group1}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.benchmarks.proto2.GoogleMessage2.Group1;
  return proto.benchmarks.proto2.GoogleMessage2.Group1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.benchmarks.proto2.GoogleMessage2.Group1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.benchmarks.proto2.GoogleMessage2.Group1}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setField11(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setField26(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setField12(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setField13(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addField14(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setField15(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField5(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setField27(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField28(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setField29(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setField16(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.addField22(value);
      break;
    case 73:
      var value = /** @type {number} */ (reader.readInt32());
      msg.addField73(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField20(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setField24(value);
      break;
    case 31:
      var value = new proto.benchmarks.proto2.GoogleMessage2GroupedMessage;
      reader.readMessage(value,proto.benchmarks.proto2.GoogleMessage2GroupedMessage.deserializeBinaryFromReader);
      msg.setField31(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.benchmarks.proto2.GoogleMessage2.Group1} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 16));
  if (f != null) {
    writer.writeFloat(
      26,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = this.getField14List();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 5));
  if (f != null) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, -5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 17));
  if (f != null) {
    writer.writeString(
      27,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 18));
  if (f != null) {
    writer.writeInt32(
      28,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 19));
  if (f != null) {
    writer.writeString(
      29,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 6));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = this.getField22List();
  if (f.length > 0) {
    writer.writeRepeatedString(
      22,
      f
    );
  }
  f = this.getField73List();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      73,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 10));
  if (f != null) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 14));
  if (f != null) {
    writer.writeString(
      24,
      f
    );
  }
  f = this.getField31();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.benchmarks.proto2.GoogleMessage2GroupedMessage.serializeBinaryToWriter
    );
  }
};


/**
 * required float field11 = 11;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField11 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField11 = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField11 = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.hasField11 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float field26 = 26;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField26 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField26 = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField26 = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.hasField26 = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string field12 = 12;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField12 = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField12 = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.hasField12 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string field13 = 13;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField13 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField13 = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField13 = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.hasField13 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string field14 = 14;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField14List = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 4));
};


/** @param {!Array.<string>} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField14List = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.addField14 = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField14List = function() {
  this.setField14List([]);
};


/**
 * required uint64 field15 = 15;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField15 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField15 = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField15 = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.hasField15 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 field5 = 5;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField5 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, -5, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField5 = function(value) {
  jspb.Message.setField(this, -5, value);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField5 = function() {
  jspb.Message.setField(this, -5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.hasField5 = function() {
  return jspb.Message.getField(this, -5) != null;
};


/**
 * optional string field27 = 27;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField27 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField27 = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField27 = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.hasField27 = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int32 field28 = 28;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField28 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField28 = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField28 = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.hasField28 = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string field29 = 29;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField29 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField29 = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField29 = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.hasField29 = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string field16 = 16;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField16 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField16 = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField16 = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.hasField16 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated string field22 = 22;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField22List = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 12));
};


/** @param {!Array.<string>} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField22List = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.addField22 = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField22List = function() {
  this.setField22List([]);
};


/**
 * repeated int32 field73 = 73;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField73List = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 63));
};


/** @param {!Array.<number>} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField73List = function(value) {
  jspb.Message.setField(this, 63, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.addField73 = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 63, value, opt_index);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField73List = function() {
  this.setField73List([]);
};


/**
 * optional int32 field20 = 20;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField20 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField20 = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField20 = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.hasField20 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string field24 = 24;
 * @return {string}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField24 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField24 = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField24 = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.hasField24 = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional GoogleMessage2GroupedMessage field31 = 31;
 * @return {?proto.benchmarks.proto2.GoogleMessage2GroupedMessage}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.getField31 = function() {
  return /** @type{?proto.benchmarks.proto2.GoogleMessage2GroupedMessage} */ (
    jspb.Message.getWrapperField(this, proto.benchmarks.proto2.GoogleMessage2GroupedMessage, 21));
};


/** @param {?proto.benchmarks.proto2.GoogleMessage2GroupedMessage|undefined} value */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.setField31 = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.clearField31 = function() {
  this.setField31(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2.Group1.prototype.hasField31 = function() {
  return jspb.Message.getField(this, 21) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.benchmarks.proto2.GoogleMessage2GroupedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.benchmarks.proto2.GoogleMessage2GroupedMessage.displayName = 'proto.benchmarks.proto2.GoogleMessage2GroupedMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.benchmarks.proto2.GoogleMessage2GroupedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.benchmarks.proto2.GoogleMessage2GroupedMessage} msg The msg instance to transform.
 * @return {!Object}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    field1: jspb.Message.getOptionalFloatingPointField(msg, 1),
    field2: jspb.Message.getOptionalFloatingPointField(msg, 2),
    field3: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    field4: jspb.Message.getField(msg, 4),
    field5: jspb.Message.getField(msg, 5),
    field6: jspb.Message.getFieldWithDefault(msg, 6, true),
    field7: jspb.Message.getFieldWithDefault(msg, 7, false),
    field8: jspb.Message.getOptionalFloatingPointField(msg, 8),
    field9: jspb.Message.getField(msg, 9),
    field10: jspb.Message.getOptionalFloatingPointField(msg, 10),
    field11: jspb.Message.getField(msg, 11)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.benchmarks.proto2.GoogleMessage2GroupedMessage}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.benchmarks.proto2.GoogleMessage2GroupedMessage;
  return proto.benchmarks.proto2.GoogleMessage2GroupedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.benchmarks.proto2.GoogleMessage2GroupedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.benchmarks.proto2.GoogleMessage2GroupedMessage}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setField1(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setField2(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setField3(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField4(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField5(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField6(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField7(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setField8(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField9(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setField10(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setField11(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.benchmarks.proto2.GoogleMessage2GroupedMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 10));
  if (f != null) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 11));
  if (f != null) {
    writer.writeInt64(
      11,
      f
    );
  }
};


/**
 * optional float field1 = 1;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.getField1 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.setField1 = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.clearField1 = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.hasField1 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float field2 = 2;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.getField2 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.setField2 = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.clearField2 = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.hasField2 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float field3 = 3;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.getField3 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.setField3 = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.clearField3 = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.hasField3 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool field4 = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.getField4 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.setField4 = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.clearField4 = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.hasField4 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool field5 = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.getField5 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.setField5 = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.clearField5 = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.hasField5 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool field6 = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.getField6 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, true));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.setField6 = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.clearField6 = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.hasField6 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool field7 = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.getField7 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.setField7 = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.clearField7 = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.hasField7 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float field8 = 8;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.getField8 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.setField8 = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.clearField8 = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.hasField8 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool field9 = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.getField9 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.setField9 = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.clearField9 = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.hasField9 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional float field10 = 10;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.getField10 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.setField10 = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.clearField10 = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.hasField10 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int64 field11 = 11;
 * @return {number}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.getField11 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.setField11 = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.clearField11 = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.benchmarks.proto2.GoogleMessage2GroupedMessage.prototype.hasField11 = function() {
  return jspb.Message.getField(this, 11) != null;
};


goog.object.extend(exports, proto.benchmarks.proto2);
